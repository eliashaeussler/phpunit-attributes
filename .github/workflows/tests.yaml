name: Tests
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  prepare:
    name: Prepare workflow
    uses: eliashaeussler/.github/.github/workflows/pull-request.yaml@main

  tests-composer:
    name: Tests with Composer (PHP ${{ matrix.php-version }}, PHPUnit ${{ matrix.phpunit-version }} & ${{ matrix.dependencies }} dependencies)
    runs-on: ubuntu-latest
    needs: prepare
    if: needs.prepare.outputs.continue == 'true'
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.1", "8.2", "8.3", "8.4"]
        phpunit-version: ["10", "11", "12"]
        dependencies: ["highest", "lowest"]
        exclude:
          - php-version: "8.1"
            phpunit-version: "11"
          - php-version: "8.1"
            phpunit-version: "12"
          - php-version: "8.2"
            phpunit-version: "12"
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: none

      # Install dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: ${{ matrix.dependencies }}
          composer-options: --with=phpunit/phpunit:^${{ matrix.phpunit-version }}

      # Run tests
      - name: Run tests
        run: composer test

  tests-phar:
    name: Tests with PHAR (PHP ${{ matrix.php-version }} & PHPUnit ${{ matrix.phpunit-version }})
    runs-on: ubuntu-latest
    needs: prepare
    if: needs.prepare.outputs.continue == 'true'
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.1", "8.2", "8.3", "8.4"]
        phpunit-version: ["10", "11", "12"]
        exclude:
          - php-version: "8.1"
            phpunit-version: "11"
          - php-version: "8.1"
            phpunit-version: "12"
          - php-version: "8.2"
            phpunit-version: "12"
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: none

      # Install dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3

      # Download PHAR
      - name: Download PHPUnit PHAR
        run: |
          wget -O phpunit.phar https://phar.phpunit.de/phpunit-${{ matrix.phpunit-version }}.phar
          wget -O phpunit.phar.asc https://phar.phpunit.de/phpunit-${{ matrix.phpunit-version }}.phar.asc
          gpg --keyserver keys.openpgp.org --recv-keys 0x4AA394086372C20A
          gpg --verify phpunit.phar.asc
          chmod +x phpunit.phar

      # Run tests
      - name: Run tests
        run: ./phpunit.phar --no-coverage

  coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    needs: prepare
    if: needs.prepare.outputs.continue == 'true'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: pcov

      # Install dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3

      # Run tests
      - name: Build coverage directory
        run: mkdir -p .build/coverage
      - name: Run tests with coverage
        run: composer test:coverage

      # Upload artifact
      - name: Fix coverage path
        working-directory: .build/coverage
        run: sed -i 's#/home/runner/work/phpunit-attributes/phpunit-attributes#${{ github.workspace }}#g' clover.xml
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: .build/coverage/clover.xml
          retention-days: 7

  coverage-report:
    name: Report test coverage
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Download artifact
      - name: Download coverage artifact
        id: download
        uses: actions/download-artifact@v5
        with:
          name: coverage

      # CodeClimate
      - name: CodeClimate report
        uses: paambaati/codeclimate-action@v9.0.0
        if: env.CC_TEST_REPORTER_ID
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{ steps.download.outputs.download-path }}/clover.xml:clover

      # Coveralls
      - name: Coveralls report
        uses: coverallsapp/github-action@v2
        with:
          file: ${{ steps.download.outputs.download-path }}/clover.xml
